{"ast":null,"code":"var _jsxFileName = \"/Users/kaustubh/GitHub/pro/src/App.js\";\nimport React from 'react';\nimport preloadergif from './images/quote.gif';\nimport { CustomPreloader } from 'react-preloaders';\nimport './App.css';\nimport { Container, Row } from 'react-bootstrap';\nimport Sakura from './images/sakura.jpg';\nimport Placard from './components/placard';\nimport Content from './components/content';\nlet theme = 'light-theme'; // const toggleThemes = () => {\n//     if (theme === 'light-theme') {\n//       changeTheme('dark-theme');\n//       theme = 'dark-theme';\n//     } else {\n//       changeTheme('light-theme');\n//       theme = 'light-theme'\n//     }\n//   }\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(CustomPreloader, {\n    time: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: preloadergif,\n    alt: \"\",\n    className: \"preloader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(\"header\", {\n    className: \"App-header\",\n    style: {\n      backgroundImage: `url(${Sakura})`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Container, {\n    id: \"container\",\n    className: \"light-theme\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Placard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kaustubh/GitHub/pro/src/App.js"],"names":["React","preloadergif","CustomPreloader","Container","Row","Sakura","Placard","Content","theme","App","backgroundImage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,OAAO,WAAP;AACA,SAASC,SAAT,EAAoBC,GAApB,QAA+B,iBAA/B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEE,IAAIC,KAAK,GAAG,aAAZ,C,CAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,GAAT,GAAe;AACb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAER,YAAV;AAAwB,IAAA,GAAG,EAAC,EAA5B;AAA+B,IAAA,SAAS,EAAC,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFA,EAMA;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAA+B,IAAA,KAAK,EAAE;AACpCS,MAAAA,eAAe,EAAG,OAAML,MAAO;AADK,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGA,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAC,WAAd;AAA0B,IAAA,SAAS,EAAC,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAHA,CANA,CADF;AAoBC;;AAED,eAAeI,GAAf","sourcesContent":["import React from 'react';\nimport preloadergif from './images/quote.gif';\nimport { CustomPreloader } from 'react-preloaders';\nimport './App.css';\nimport { Container, Row } from 'react-bootstrap';\nimport Sakura from './images/sakura.jpg';\n\nimport Placard from './components/placard';\nimport Content from './components/content';\n\n  let theme = 'light-theme';\n\n// const toggleThemes = () => {\n//     if (theme === 'light-theme') {\n//       changeTheme('dark-theme');\n//       theme = 'dark-theme';\n//     } else {\n//       changeTheme('light-theme');\n//       theme = 'light-theme'\n//     }\n//   }\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    {/* <CustomPreloader time={3000}> */}\n    <CustomPreloader time={0}>\n      <img src={preloadergif} alt=\"\" className=\"preloader\" />\n    </CustomPreloader>\n    \n    <header className=\"App-header\" style={{\n      backgroundImage: `url(${Sakura})`,\n      }}>\n    <Container id=\"container\" className=\"light-theme\">\n      <Row>\n        <Placard/>\n        <Content/>\n      </Row>\n    </Container>\n    </header>\n    \n    </div>\n    );\n  }\n  \n  export default App;\n  "]},"metadata":{},"sourceType":"module"}
{"version":3,"sources":["images/quote.gif","images/kaustubh.png","data/bio.js","components/placard.js","utils/changeTheme.js","components/themer.js","data/papers.js","components/content.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Bio","FirstName","Name","Role","Location","URLs","Twitter","LinkedIn","Instagram","Github","GoogleScholar","Email","Podcast","Intro","PodcastName","Placard","Col","xs","md","className","src","profilePic","alt","href","rel","target","changeTheme","newThemeName","newButtonText","document","getElementById","innerHTML","theme","toggleThemes","Themer","Row","id","onClick","role","aria-label","Papers","Title","URL","Venue","Authors","Content","map","paper","class","App","time","preloadergif","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15f444ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/quote.ca559bcf.gif\";","module.exports = __webpack_public_path__ + \"static/media/kaustubh.c36896cd.png\";","export const Bio = {\n    FirstName: \"Kaustubh\",\n    Name: \"Kaustubh Hiware\",\n    Role: \"Software Engineer\",\n    Location: \"Mercari US@Tokyo\",\n    URLs: {\n        Twitter: \"https://twitter.com/_ofkaus\",\n        LinkedIn: \"https://www.linkedin.com/in/ofkaus/\",\n        Instagram: \"https://instagram.com/_ofkaus\",\n        Github: \"https://github.com/kaustubhhiware\",\n        GoogleScholar: \"https://scholar.google.com/citations?hl=en&user=9iIiFjMAAAAJ\",\n        Email: \"hiwarekaustubh+web@gmail.com\",\n        Podcast: \"https://techculturepodcast.com\",\n    },\n    Intro: [\n        \"I'm a Software Engineer at Mercari US@Tokyo with an inclination towards tech products.\\n\",\n        \"In free time, I watch anime and take photos. Humor in all things.\\n\", \n        \"I cover interesting trends in SaaS on a podcast:\",\n    ],\n    PodcastName: \"Tech Culture Podcast\",\n};\n\nexport default Bio;","import React from \"react\";\nimport './base.css';\nimport { Col } from 'react-bootstrap';\n\nimport Bio from '../data/bio';\nimport profilePic from './../images/kaustubh.png';\nimport { FaGithub, FaInstagram, FaLinkedinIn, FaTwitter } from 'react-icons/fa';\nimport { SiGooglescholar } from \"react-icons/si\";\nimport { IoMail } from \"react-icons/io5\";\n\n\nexport const Placard = () => {\n  \n  return (\n    <Col xs={12} md={3}>\n    <div className=\"sidecard\">\n    <img src={profilePic} className=\"placard-image\" alt=\"Profile\"/>\n    \n    <div className=\"placard-title\">\n      {Bio.Name}\n    </div>\n    <div className=\"placard-role\">\n      {Bio.Role}\n    </div>\n\n    <div className=\"placard-location\">\n      {Bio.Location}\n    </div>\n    \n    <hr className=\"liner\" />\n\n    <div className=\"social\">\n    <a href={Bio.URLs.Twitter} rel=\"noopener noreferrer\" target=\"_blank\">\n      <FaTwitter />\n    </a>\n    <a href={Bio.URLs.LinkedIn} rel=\"noopener noreferrer\" target=\"_blank\">\n      <FaLinkedinIn />\n    </a>\n    <a href={Bio.URLs.Instagram} rel=\"noopener noreferrer\" target=\"_blank\">\n      <FaInstagram />\n    </a>\n    <a href={Bio.URLs.Github} rel=\"noopener noreferrer\" target=\"_blank\">\n      <FaGithub />\n    </a>\n    <a href={Bio.URLs.GoogleScholar} rel=\"noopener noreferrer\" target=\"_blank\">\n      <SiGooglescholar />\n    </a>\n    <a href={\"mailto:\" + Bio.URLs.Email} rel=\"noopener noreferrer\" target=\"_blank\">\n      <IoMail />\n    </a>\n    </div>\n\n    </div>\n    </Col>\n    );\n  };\n\n  export default Placard;","const changeTheme = (newThemeName, newButtonText) => {\n\n  document.getElementById('superset').className = newThemeName;\n\n  document.getElementById('themoji').innerHTML = newButtonText;\n}\n\nexport default changeTheme;","import React from \"react\";\nimport './base.css';\nimport { Row, Col } from 'react-bootstrap';\nimport changeTheme from './../utils/changeTheme.js';\n\n// starting theme - should probably pass as prop\n  let theme = 'dark-theme';\n\nconst toggleThemes = () => {\n  if (theme === 'light-theme') {\n    changeTheme('dark-theme', 'ðŸŒ¸');\n    theme = 'dark-theme';\n  } else {\n    changeTheme('light-theme', 'ðŸŒŠ');\n    theme = 'light-theme'\n  }\n}\n\nexport const Themer = () => {\n  \n  return (\n    <Row className=\"themer-row\">\n    <Col xs={6} md={1} className=\"themer-set\">\n      <button id=\"themer\" className=\"themer\" onClick={toggleThemes}>\n        <span role=\"img\" aria-label=\"theme-switcher\" id=\"themoji\">\n          ðŸŒ¸\n        </span>\n      </button>\n    </Col>\n    <Col xs={6} md={3}>Top nav</Col>\n    </Row>\n    );\n  };\n\n  export default Themer;","export const Papers = [\n    {\n        Title: \"Savitr: A system for real-time location extraction from microblogs during emergencies\",\n        URL: \"https://dl.acm.org/doi/10.1145/3184558.3191623\",\n        Venue: \" WWW 2018 workshop on Exploitation of Social Media for Emergency Relief and Preparedness (SMERP)\",\n        Authors: \"Ritam Dutt, *Kaustubh Hiware, Avijit Ghosh, Rameshwar Bhaskaran\",\n    },\n    {\n        Title: \"Emotion detection from touch interactions during text entry on smartphones\",\n        URL: \"https://www.sciencedirect.com/science/article/abs/pii/S1071581918304889\",\n        Venue: \"International Journal of Human-Computer Studies 2019\",\n        Authors: \"Surjya Ghosh, *Kaustubh Hiware, Niloy Ganguly, Bivas Mitra, Pradipta De\",\n    },\n    {\n        Title: \"A comparative study of summarization algorithms applied to legal case judgments\",\n        URL: \"https://www.sciencedirect.com/science/article/abs/pii/S1071581918304889\",\n        Venue: \"European Conference on Information Retrieval 2019\",\n        Authors: \"Paheli Bhattacharya, *Kaustubh Hiware, Subham Rajgaria, Nilay Pochhi, Kripabandhu Ghosh, Saptarshi Ghosh\",\n    },\n    {\n        Title: \"Does emotion influence the use of auto-suggest during smartphone typing?\",\n        URL: \"https://www.researchgate.net/profile/Surjya_Ghosh/publication/331214440_Does_emotion_influence_the_use_of_auto-suggest_during_smartphone_typing/links/5ca43ff792851c8e64aed384/Does-emotion-influence-the-use-of-auto-suggest-during-smartphone-typing.pdf\",\n        Venue: \"International Conference on Intelligent User Interfaces, ACM, IUI 2019\",\n        Authors: \"Surjya Ghosh, *Kaustubh Hiware, Bivas Mitra, Niloy Ganguly, Pradipta De\",\n    },\n    {\n        Title: \"NARMADA: Need and Available Resource Managing Assistant for Disasters and Adversities\",\n        URL: \"https://www.aclweb.org/anthology/2020.socialnlp-1.3/\",\n        Venue: \"ACL 2020 workshop on Natural Language Processing for Social Media (SocialNLP)\",\n        Authors: \"*Kaustubh Hiware, Ritam Dutt, Sayan Sinha, Sohan Patro, Kripabandhu Ghosh, Saptarshi Ghosh\",\n    },\n    {\n        Title: \"A Graph Based Semi-Supervised Approach for Analysis of Derivational Nouns in Sanskrit\",\n        URL: \"https://www.aclweb.org/anthology/W17-2409/\",\n        Venue: \"ACL 2017 workshop on Graph-based Methods for Natural Language Processing (TextGraphs-11)\",\n        Authors: \"Amrith Krishna, Pavankumar Satuluri, Harshavardhan Ponnada, Muneeb Ahmed, Gulab Arora, *Kaustubh Hiware, Pawan Goyal\",\n    },\n];\n\nexport default Papers;","import React from \"react\";\nimport './base.css';\nimport { Col } from 'react-bootstrap';\n\nimport Themer from './themer';\nimport Bio from '../data/bio';\nimport Papers from '../data/papers';\n\nexport const Content = () => {\n  \n  return (\n    <Col xs={12} md={9}>\n    <Themer />\n\n    <div className=\"content-card\">\n      <div className=\"content-card-title\">\n        Hello, I'm {Bio.FirstName}! ðŸ‘‹\n      </div>\n      <div className=\"content-card-content\">\n        {Bio.Intro} <a href={Bio.URLs.Podcast} target=\"_blank\">{Bio.PodcastName}</a>\n      </div>\n    </div>\n\n    <div className=\"content-card\">\n      <div className=\"content-card-title\">\n        Publications\n      </div>\n      <div className=\"content-card-content\">\n        <ul>\n          {Papers.map((paper) => (\n            <li class=\"paper-list\">\n              {paper.Title} - <a href={paper.URL} target=\"_blank\" className=\"paper-link\">link</a><br />\n              <span className=\"content-card-subtitle\">\n                at the {paper.Venue}\n              </span>\n              <br />\n              <span className=\"content-card-subtitle\">{paper.Authors}</span>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n    </Col>\n\n    );\n  };\n\n  export default Content;","import React from 'react';\nimport preloadergif from './images/quote.gif';\nimport { CustomPreloader } from 'react-preloaders';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Row } from 'react-bootstrap';\n\nimport Placard from './components/placard';\nimport Content from './components/content';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    {/* <CustomPreloader time={3000}> */}\n    <CustomPreloader time={0}>\n      <img src={preloadergif} alt=\"\" className=\"preloader\" />\n    </CustomPreloader>\n    \n    <header className=\"App-header\">\n    <Row id=\"superset\" className=\"dark-theme\">\n        <Placard/>\n        <Content/>\n    </Row>\n    </header>\n    \n    </div>\n    );\n  }\n  \n  export default App;\n  ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}